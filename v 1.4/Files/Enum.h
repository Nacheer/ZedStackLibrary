#pragma once

// Library: Enum.h

namespace ZedStack {
	enum ZS_COLORS {
		ALICEBLUE,
		ANTIQUEWHITE,
		AQUA,
		AQUAMARINE,
		AZURE,
		BEIGE,
		BISQUE,
		BLACK,
		BLANCHEDALMOND,
		BLUE,
		BLUEVIOLET,
		BROWN,
		BURLYWOOD,
		CADETBLUE,
		CHARTREUSE,
		CHOCOLATE,
		CORAL,
		CORNFLOWERBLUE,
		CORNSILK,
		CRIMSON,
		CYAN,
		DARKBLUE,
		DARKCYAN,
		DARKGOLDENROD,
		DARKGRAY,
		DARKGREEN,
		DARKKHAKI,
		DARKMAGENTA,
		DARKOLIVEGREEN,
		DARKORANGE,
		DARKORCHID,
		DARKRED,
		DARKSALMON,
		DARKSEAGREEN,
		DARKSLATEBLUE,
		DARKSLATEGRAY,
		DARKTURQUOISE,
		DARKVIOLET,
		DEEPPINK,
		DEEPSKYBLUE,
		DIMGRAY,
		DODGERBLUE,
		FIREBRICK,
		FLORALWHITE,
		FORESTGREEN,
		FUCHSIA,
		GAINSBORO,
		GHOSTWHITE,
		GOLD,
		GOLDENROD,
		GRAY,
		GREEN,
		GREENYELLOW,
		HONEYDEW,
		HOTPINK,
		INDIANRED,
		INDIGO,
		IVORY,
		KHAKI,
		LAVENDER,
		LAVENDERBLUSH,
		LAWNGREEN,
		LEMONCHIFFON,
		LIGHTBLUE,
		LIGHTCORAL,
		LIGHTCYAN,
		LIGHTGOLDENRODYELLOW,
		LIGHTGRAY,
		LIGHTGREEN,
		LIGHTPINK,
		LIGHTSALMON,
		LIGHTSEAGREEN,
		LIGHTSKYBLUE,
		LIGHTSLATEGRAY,
		LIGHTSTEELBLUE,
		LIGHTYELLOW,
		LIME,
		LIMEGREEN,
		LINEN,
		MAGENTA,
		MAROON,
		MEDIUMAQUAMARINE,
		MEDIUMBLUE,
		MEDIUMORCHID,
		MEDIUMPURPLE,
		MEDIUMSEAGREEN,
		MEDIUMSLATEBLUE,
		MEDIUMSPRINGGREEN,
		MEDIUMTURQUOISE,
		MEDIUMVIOLETRED,
		MIDNIGHTBLUE,
		MINTCREAM,
		MISTYROSE,
		MOCCASIN,
		NAVAJOWHITE,
		NAVY,
		OLDLACE,
		OLIVE,
		OLIVEDRAB,
		ORANGE,
		ORANGERED,
		ORCHID,
		PALEGOLDENROD,
		PALEGREEN,
		PALETURQUOISE,
		PALEVIOLETRED,
		PAPAYAWHIP,
		PEACHPUFF,
		PERU,
		PINK,
		PLUM,
		POWDERBLUE,
		PURPLE,
		REBECCAPURPLE,
		RED,
		ROSYBROWN,
		ROYALBLUE,
		SADDLEBROWN,
		SALMON,
		SANDYBROWN,
		SEAGREEN,
		SEASHELL,
		SIENNA,
		SILVER,
		SKYBLUE,
		SLATEBLUE,
		SLATEGRAY,
		SNOW,
		SPRINGGREEN,
		STEELBLUE,
		TAN,
		TEAL,
		THISTLE,
		TOMATO,
		TURQUOISE,
		VIOLET,
		WHEAT,
		WHITE,
		WHITESMOKE,
		YELLOW,
		YELLOWGREEN,
		PREVIOUS_COLOR,
		CURRENT_COLOR
	};
	enum ZS_KEYS {
		KEY_A, KEY_B,
		KEY_C, KEY_D,
		KEY_E, KEY_F,
		KEY_G, KEY_H,
		KEY_I, KEY_J,
		KEY_K, KEY_L,
		KEY_M, KEY_N,
		KEY_O, KEY_P,
		KEY_Q, KEY_R,
		KEY_S, KEY_T,
		KEY_U, KEY_V,
		KEY_W, KEY_X,
		KEY_Y, KEY_Z,

		KEY_ESC, KEY_SPA, KEY_RET,

		KEY_UP, KEY_DO, KEY_LE, KEY_RI,

		KEY_F1, KEY_F2, KEY_F3, KEY_F4, KEY_F5,
		KEY_F6, KEY_F7, KEY_F8, KEY_F9, KEY_F10,

		KEY_1, KEY_2, KEY_3, KEY_4, KEY_5,
		KEY_6, KEY_7, KEY_8, KEY_9, KEY_0,

		KEY_NP_1, KEY_NP_2, KEY_NP_3, KEY_NP_4, KEY_NP_5,
		KEY_NP_6, KEY_NP_7, KEY_NP_8, KEY_NP_9, KEY_NP_0,

		KEY_NONE
	};
	enum ZS_LINE_TYPE {
		FILLED,
		BORDER,
		SOLID,
		DOTTED,
		DASHED,
		DASHED_DOT,
		DASHED_DOT_DOT,
	};
	enum SQ_FIGURE_TYPE {
		SQ_R,
		SQ_D,
		SQ_R_S,
		SQ_R_F,
		SQ_D_S,
		SQ_D_F,
	};
	enum RE_FIGURE_TYPE {
		RE_FREE,
		RE_R,
		RE_D,
		RE_R_S,
		RE_R_F,
		RE_D_S,
		RE_D_F,
	};
	enum CI_FIGURE_TYPE {
		CI_R,
		CI_D,
		CI_R_S,
		CI_R_F,
		CI_D_S,
		CI_D_F,
	};
	enum ZS_TIME {
		MSS,
		SS,
		MS
	};
	enum ZS_TEXT_ALIGN {
		TOP,
		BOTTOM,
		LEFT,
		RIGHT,
		CENTER,
		TOP_LEFT, TOP_RIGHT, TOP_CENTER,
		BOTTOM_LEFT, BOTTOM_RIGHT, BOTTOM_CENTER
	};
}